[{"title":"css","date":"2021-10-08T11:56:19.000Z","path":"2021/10/08/css/","text":"CSScss选择器css的选择器学习： 123456789101112131415161718192021&lt;style type = &quot;text/css&quot;&gt; /*标签选择器*/ table&#123; height: 300px; width: 200px; border: solid 1px; background-color: red; &#125; /*id选择器*/ #t1&#123; background-color: blue; &#125; /*类选择器*/ .common&#123; color:red; &#125; /*组合选择器*/ table,.common&#123; color:red; &#125; &lt;/style&gt; 标签选择器：标签名{样式名1：样式值1；…….} 作用：会将当前网页内所有该标签增加相同的样式 id选择器：#标签的id属性值{样式名1：样式值1；……} 作用：给某个指定的标签添加样式 类选择器：.类选择器名{样式名1：样式值1；……} 作用：给不同的标签添加相同的样式 全部选择选择器：*{样式名1：样式值1；……} 作用：选择所有的HTML标签，并添加相同的样式 组合选择器：选择器1，选择器2，…..{样式名1：样式值1；……} 作用：解决不同的选择器之间重复样式的问题","tags":[]},{"title":"html","date":"2021-09-29T07:18:59.000Z","path":"2021/09/29/html/","text":"[TOC] HTML基础学习body 标签123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;菜鸟教程(runoob.com)&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;h1 aligh = &quot;left&quot;&gt; 全红禅祝大家国庆节快乐！&lt;/h1&gt;&lt;hr width = &quot;20%&quot; size = 5px color = &quot;purple&quot;/&gt;&lt;p&gt; 全红婵发文祝大家国庆节快乐，并且晒出长隆假期游玩照，准备恢复挥汗如雨的训练生活了，妹妹玩得开心啊! 妹妹真的太可爱了!&lt;/p&gt; 哈哈哈，&lt;b&gt;全红婵&lt;/b&gt;妹妹有心啦！特意发文祝大家国庆节快乐！还真是个体贴又温暖的&lt;i&gt;女孩呢！&lt;/i&gt;&lt;br/&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;你也要快乐过节，&lt;u&gt;快乐训练！&lt;/u&gt;期待你下次精彩表现。&lt;/p&gt;&lt;/body&gt;&lt;/html&gt; 标题标签： h1到h6：将其中的内容加粗加黑显示，并且显示依次减弱，自带换行功能（块级标签）。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性：aligh = “center”/ “left”/“right” 水平线标签：hr 在页面中显示一条水平线，默认居中显示 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;属性：width = “宽度” 设置水平线的宽度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;size = “高度” 设置水平线的高度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;color = “颜色” 设置水平线的颜色 段落标签：p 会将一段数据作为整体进行显示自动换行，段间距比较大 换行符：br 告诉浏览器在此位置增加空格 权重标签： b 会将内容加黑显示 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; i 会将内容斜体显示 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;u 会将内容增加下划线 &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;&nbsp;del 增加中划线 表单学习123456789101112131415161718192021222324252627282930313233343536373839404142434445464748&lt;table border=&quot;1px&quot; cellspacing=&quot;0px&quot; cellpadding=&quot;8px&quot;&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td colspan=&quot;5&quot;&gt;基本情况&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td width = &quot;120px&quot;&gt;姓名&lt;/td&gt; &lt;td width = &quot;120px&quot;&gt;&lt;/td&gt; &lt;td width = &quot;120px&quot;&gt;性别&lt;/td&gt; &lt;td width = &quot;120px&quot;&gt;&lt;/td&gt; &lt;td width = &quot;120px&quot; rowspan=&quot;7&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;民族&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;出生年月&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;政治面貌&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;健康&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;籍贯&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;学历&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;电子信箱&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;联系电话&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;专业&lt;/td&gt; &lt;td colspan=&quot;3&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;毕业院校&lt;/td&gt; &lt;td colspan=&quot;3&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;tr height = &quot;27px&quot;&gt; &lt;td&gt;求职意向&lt;/td&gt; &lt;td colspan=&quot;4&quot;&gt;&lt;/td&gt; &lt;/tr&gt;&lt;/table&gt; table：声明一个表格 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;tr：声明一行，设置行高以及该行所有单元格的高度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;th：声明一个单元格，表头格，默认居中加黑显示 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;td：声明一个单元格，默认居左显示原始数据 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;注意：行高即该行所有单元格的宽度，单元格的宽度即列宽 简单写法：五行六列的表格 1table&gt;tr*5&gt;td*6 属性： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;border：给表格添加边框 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width：设置表格的宽度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height：设置表格的高度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cellpadding：设置内容居边框的距离 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;cellspacing：设置边框的大小 单元格合并： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第一步：首先确保表格是一个规整的表格 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第二步：根据要合并的单元格，找到其所在的源码位置 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;第三步： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;行合并：在要合并的单元格中第一个单元格上使用属性rowspan=“要合并的单元格的个数”，并删除其他单元格完成合并 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;列合并：在要合并的单元格中任意一个上使用属性colspan = “要合并的单元格的个数”并删除其他要合并的单元格完成合并 内嵌标签学习内嵌标签：iframe &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src：要显示的网页资源路径，可以是本地（相对路径）也可以是网络资源（URL），默认当前页面打开及加载src指向的资源 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width：设置区域的宽度 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height：设置区域的高度 form表单标签作用：收集并提交用户数据给指定服务器。 注意：form标签会收集其标签内部的数据，要提交的表单项必须拥有name属性，否则不会提交 属性： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;action：收集的数据的提交地址，URL &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;method：收集的数据的提交方式， &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;get：适合小量数据，表单数据以？隔开拼接在用户书写的URL后面，不同的键值对用&amp;连接，不安全。 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;post：适合大量数据，安全，隐式提交。 表单域标签：作用：给用户提供可以进行数据书写或者选择的标签， 文本框：input： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;type： &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;text 收集少量文本数据，用户可见 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;password 收集用户密码数据 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;name：数据提交的键，也会被js使用 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value：默认值 单选框：type = “radio”，name属性相同的只能选一项数据 value 要提交的数据，checked checked使用此属性的单选默认是选择状态 form表单标签：form标签会将其内部所有的form表单标签中的所有的用户数据按照method指定的提交方式提交给action指明的地址 123456&lt;form action = &#x27;#&#x27; method=&quot;get&quot;&gt; 用户名&lt;input type=&quot;text&quot; name = &quot;rtr&quot;/&gt;&lt;br/&gt; 密码&lt;input type = &quot;text&quot; name = &quot;uid&quot;/&gt;&lt;br&gt; &lt;input type = &quot;submit&quot; value=&quot;提交&quot;/&gt; 性别：男&lt;input type = &quot;radio&quot; name = &quot;sex&quot; value = &quot;male&quot; checked = &quot;checked&quot;/&gt;女&lt;input type = &quot;radio&quot; name = &quot;sex&quot; value = &quot;female&quot;/&gt;&lt;/form&gt;","tags":[]},{"title":"Array","date":"2021-09-24T01:02:03.000Z","path":"2021/09/24/Array/","text":"数组的基本操作（Array）数组也是一个对象，不同的是普通的对象是使用字符串作为属性名，而数组是使用数字作为索引来操作元素。 数组长度没有限制，数组元素可以是数据类型。 数组创建：12345var arr = new Array();//使用构造函数创建数组，无参；var arr0 = new Array(10, 20, 30);//使用构造函数创建数组时，也可以同时添加元素，将要添加的元素作为构造函数的参数传递，元素间用，隔开；var arr1 = new Array(10);//长度为10var arr2 = [];var arr3 = [1,2,3,4]; 使用typeof检查一个数组时，会返回object。 123console.log(typeof arr)//返回objectarr[0] = 10;//添加元素，索引是从0开始的整数。console.log(arr.length)//获取数组的长度 增删12345arr.push(&quot;唐僧&quot;, &quot;蜘蛛精&quot;);//向数组末尾添加一个或者多个元素，并返回数组新的长度arr.unshift(&quot;牛魔王&quot;);//向数组的开头添加一个或者多个元素，并返回新的数组长度arr.pop();//删除数组最后一个元素，并将被删除的元素返回arr.shift();//删除数组的第一个元素，并将被删除的元素返回 数组遍历：1234for(var i = 0;i&lt;arr.length;i++)&#123; console.log(arr[i]);&#125; forEach(这个方法只支持IE8以上的浏览器)12345arr.forEach(function(a)&#123; console.log(&quot;hello&quot;); console.log(a); &#125;);//像这种函数，由我们创建但不由我们调用，回调函数,数组中有几个元素就会执行几次。每次执行时，浏览器会将遍历到的元素以实参的形式传递进来，我们可以定义形参来读取这些内容。浏览器会在回调函数中传递三个参数：第一个就是当前正在遍历的元素，第二个参数是当前正在遍历元素的索引，第三个参数是正在遍历的数组对象 slice|splice12var result = arr.slice(0, 2);//截取开始位置的索引，截取结束位置的索引，包含开始不包含结束索引。该方法不会改变元素数组，而是将截取到的元素封装到一个新的数组中；第二个参数可以省略不写，此时会截取从开始索引往后的所有元素；索引可以传递一个负值，如果传递一个负值，则从后往前计算，-1倒数第一个。var result = arr.splice(0, 2, &quot;牛魔王&quot;);//可以用于删除数组中的指定元素，会将指定元素从原数组中删除，并将被删除的元素作为返回值返回。第一个表示开始位置的索引，第二个表示删除的数量，第三个及以后的元素：可以传递一些新的元素，这些元素将会自动插入到开始位置索引前边。 去重12345678910111213var arr = [1,2,3,2,2,1,3,4,2,5];for(var i = 0;i&lt;arr.length;i++)&#123; for(var j = i+1;j&lt;arr.length;j++) &#123; if(arr[i] == arr[j]) &#123; arr.splice(j, 1); //当删除了当前j所在的元素以后，后面的元素会自动补位。元素的长度也会跟着改变。 j--; &#125; &#125;&#125; concat|join|reverse|sort123456789101112131415var arr = [&quot;孙悟空&quot;, &quot;猪八戒&quot;];var arr2 = [&quot;白骨精&quot;,&quot;蜘蛛精&quot;]result = arr.concat(arr2,&quot;牛魔王&quot;);//该方法可以连接两个或者多个数组，并将新的数组返回，不会对原数组产生影响result = arr.join(&quot;@-@&quot;);//该方法可以将数组转换为一个字符串，该方法不会对原数组产生影响，而是将转换后的字符串返回，在join()中可以指定字符串作为参数，该参数会成为数组中的元素连接符，默认为&quot;,&quot;。arr.reverse();//该方法用来反转数组，修改原数组arr.sort();//用来对数组中的元素进行排序，修改原数组，默认会按照Unicode编码进行排序，即使对于纯数字的数组，可能会得到错误结果。添加回调函数，指定排序规则，回调函数中定义两个形参，a在b前面：arr.sort(funtion(a,b)&#123; if(a&gt;b) return 1; else return 0; &#125;);arr.sort(funtion(a,b)&#123; return a-b; &#125;);","tags":[]},{"title":"JS study","date":"2021-09-23T07:02:25.102Z","path":"2021/09/23/my-first-blog/","text":"JS学习for循环的使用123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;study&lt;/title&gt; &lt;script type = &quot;text/javascript&quot;&gt; for(var i = 10;i&lt;15;i++) &#123; document.write(i); document.write(&#x27;&lt;br /&gt;&#x27;); &#125; &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; JS中的for循环与JAVA中的很相似，这里就不多说了。注意：JS中的换行符是 1&lt;br /&gt; 条件语句1234if(age &gt;= 18)&#123; console.log(age);&#125; 对象的属性123var obj = new Object();obj.name = &quot;孙悟空&quot;;obj.var = 798; 对象的属性名不强制要求遵守标识符的规范，但是我们使用时还是尽量按照标识符的规范去做。如果要使用特殊的属性名，不能采用.的方式来操作，使用：对象[“属性名”] = 属性值。 JS的普通函数声明方式一： 12345678910function fun()&#123; var sum = 0; for(var i = 0; i&lt;100; i++) &#123; sum += i; &#125; return sum&#125;alert(fun()); 声明方式二： 123456789var fun = function()&#123; var sum = 0; for(var i = 0; i&lt;100; i++) &#123; sum += i; &#125; return sum &#125; alert(fun()); JS的构造方法首先展示一个简单的代码： 12345678910111213141516171819202122&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta charset=&quot;utf-8&quot;&gt; &lt;title&gt;study&lt;/title&gt; &lt;script type = &quot;text/javascript&quot;&gt; function Person(name, age, gender) &#123; this.name = name; this.age = age; this.gender = gender; alert(&quot;Hello!&quot;); &#125; var Jogh = new Person(&quot;jogh&quot;, 12, &quot;male&quot;); &lt;/script&gt;&lt;/head&gt;&lt;body&gt;&lt;/body&gt;&lt;/html&gt; 在编写js代码的时候需要添加如下语句来声明这是一个JS代码块。 12&lt;script type = &quot;text/javascript&quot;&gt;&lt;/script&gt; 上述代码块中，Person是一个带参数的构造方法，this是指代该构造方法生成的对象；构造方法与普通方法不同之处在于构造方法调用的时候前面有一个关键字new。 原型prototype在我们所创建的每一个函数，解析器都会函数添加一个属性prototype,这个属性对应着一个对象，这个对象就是我们所谓的原型对象。如果函数作为普通函数调用prototype，这个对象没有任何作用。当函数以构造函数调用，他所创建的对象中都会有一个隐含的属性，通过__proto__来访问该属性。原型对象相当于一个公共的区域，所有的同一类的实例都可以访问到这个原型对象。 123456function MyClass()&#123;&#125;function Person()&#123;&#125;var per = new Person();MyClass.prototype == per.__proto__//true","tags":[]}]